{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/Appp.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Appp","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAaeA,EAXF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACQ,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCaTK,EAlBG,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAChB,OACQ,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACQ,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKtBC,EAbG,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAXI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAApE,SACSJ,EAAMK,YC0CRC,G,wDAvCX,aAAc,IAAD,8BACT,gBAWJC,eAAiB,SAACC,GACd,EAAKC,SAAU,CAAEC,YAAaF,EAAMG,OAAOC,SAX3C,EAAKC,MAAQ,CACTvB,OAAQ,GACRoB,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKT,SAAS,CAACnB,OAAS4B,S,oBAM5C,WAAS,IAAD,EAC+BC,KAAKN,MAA7BvB,EADP,EACOA,OAAQoB,EADf,EACeA,YACTU,EAAiB9B,EAAO+B,QAAO,SAAA/B,GACrC,OAAOA,EAAOP,KAAKuC,cAAcC,SAASb,EAAYY,kBAEtD,OAAmB,IAAhBhC,EAAOkC,OACC,yCAIH,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAewB,KAAKZ,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAU8B,a,GA/B7BK,cCKJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,EAAD,IACDC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.8120961d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return (\r\n            <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n                <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst  CardList = ({robots}) => {\r\n    return (\r\n            <div>\r\n                {\r\n                    robots.map((user, i) => {\r\n                        return (\r\n                                <Card\r\n                                key={i}\r\n                                id={robots[i].id}\r\n                                name={robots[i].name}\r\n                                email={robots[i].email}\r\n                                />\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n    );\r\n}\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border:'5px solid black', height: '460px'}}>\r\n                {props.children}\r\n        </div>\r\n    );\r\n}\r\nexport default Scroll;\r\n\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport '../containers/Appp.css';\r\n\r\n\r\nclass Appp extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => {this.setState({robots : users})})\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState ({ searchfield: event.target.value}) \r\n    }\r\n\r\n    render(){\r\n            const {robots, searchfield}  = this.state;\r\n            const filteredRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n            })\r\n            if(robots.length===0){\r\n                return <h1>Loading</h1>\r\n            }\r\n            else{\r\n                return (\r\n                    <div className='tc'>\r\n                        <h1 className='f1'>RoboFriends</h1>\r\n                        <SearchBox searchChange ={this.onSearchChange}/>\r\n                        <Scroll>\r\n                            <CardList robots = {filteredRobots} />\r\n                        </Scroll>\r\n                    </div>\r\n            );\r\n            }\r\n\r\n    \r\n}\r\n}\r\nexport default Appp; ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Appp from './containers/Appp';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(\r\n    <Appp/>\r\n  ,document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}